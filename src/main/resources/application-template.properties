# ============================================================================
# üîß CONFIGURATION QUARKUS LAMBDA BOOTSTRAP
# ============================================================================

# === APPLICATION INFO ===
quarkus.application.name=${PROJECT_NAME:quarkus-lambda-bootstrap}
quarkus.application.version=${PROJECT_VERSION:1.0.0-SNAPSHOT}

# === LAMBDA CONFIGURATION ===
# AWS Lambda HTTP Handler (for Function URL compatibility)
quarkus.lambda.handler=io.quarkus.amazon.lambda.http.LambdaHttpHandler
# Disable polling mode for Lambda
quarkus.lambda.enable-polling-jvm-mode=false

# === LOGGING CONFIGURATION ===
# Default log level (can be overridden by environment)
quarkus.log.level=${LOG_LEVEL:INFO}
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n

# === DEVELOPMENT PROFILE ===
%dev.quarkus.log.level=DEBUG
%dev.quarkus.log.category."com.amazonaws".level=INFO
%dev.quarkus.log.category."software.amazon".level=INFO

# === PRODUCTION PROFILE ===
%prod.quarkus.log.level=${LOG_LEVEL:INFO}
%prod.quarkus.lambda.enable-polling-jvm-mode=false
%prod.quarkus.native.debug.enabled=false

# === NATIVE BUILD CONFIGURATION ===
quarkus.native.debug.enabled=${NATIVE_DEBUG_ENABLED:false}
quarkus.native.enable-reports=${NATIVE_ENABLE_REPORTS:false}

# === HTTP CONFIGURATION ===
# Default HTTP port for development
quarkus.http.port=8080
quarkus.http.host=0.0.0.0

# === CORS CONFIGURATION (if needed) ===
# Uncomment and customize if you need CORS
# quarkus.http.cors=true
# quarkus.http.cors.origins=${CORS_ALLOW_ORIGINS:*}
# quarkus.http.cors.methods=${CORS_ALLOW_METHODS:GET,POST,PUT,DELETE,OPTIONS}
# quarkus.http.cors.headers=${CORS_ALLOW_HEADERS:*}
# quarkus.http.cors.access-control-max-age=${CORS_MAX_AGE:86400}

# === HEALTH CHECK CONFIGURATION ===
# Uncomment if you added health check dependency
# quarkus.health.openapi.included=true

# === OPENAPI CONFIGURATION ===
# Uncomment if you added OpenAPI dependency
# quarkus.swagger-ui.always-include=true
# quarkus.swagger-ui.path=/swagger-ui

# === DATABASE CONFIGURATION (PostgreSQL) ===
# Uncomment and configure if you use a database
# quarkus.datasource.db-kind=postgresql
# quarkus.datasource.username=${DB_USERNAME:postgres}
# quarkus.datasource.password=${DB_PASSWORD:password}
# quarkus.datasource.jdbc.url=${DB_URL:jdbc:postgresql://localhost:5432/mydb}
# quarkus.hibernate-orm.database.generation=${DB_GENERATION:drop-and-create}

# === REDIS CONFIGURATION ===
# Uncomment and configure if you use Redis
# quarkus.redis.hosts=${REDIS_URL:redis://localhost:6379}

# === AWS CONFIGURATION ===
# These will be automatically configured by Lambda runtime
# quarkus.lambda.container-runtime=true

# === CUSTOM APPLICATION PROPERTIES ===
# Add your custom properties here
# app.custom.property=${CUSTOM_PROPERTY:default-value}

# ============================================================================
# üìù NOTES:
# ============================================================================
# 1. Variables ${VAR_NAME:default} will use environment variable VAR_NAME
#    or fall back to 'default' if not set
# 
# 2. Profiles (%dev, %prod) allow different configs per environment
# 
# 3. For Lambda deployment, most HTTP settings are ignored since Lambda
#    handles the HTTP layer
# 
# 4. Add database/cache configs only when you add the corresponding dependencies
# 
# 5. CORS is usually not needed with Lambda Function URL, but can be configured
#    if you plan to also deploy as a regular HTTP service
# ============================================================================